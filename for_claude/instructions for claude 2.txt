1. Fix the duplicate generateMetadata function errors
The error occurs because we're declaring the generateMetadata function while also importing a function with the same name. Let's modify both files:
For app/blog/[slug]/page.jsx:
jsximport Image from 'next/image';
import Link from 'next/link';
import { notFound } from 'next/navigation';
import { generateMetadata as createMetadata } from '@/components/SEOConfig';
import { FaCalendar, FaUser, FaTags } from 'react-icons/fa';

// This would come from your CMS or content files in production
const blogPosts = {
  // Your blog posts data
};

// Generate metadata for SEO
export async function generateMetadata({ params }) {
  const { slug } = params;
  const post = blogPosts[slug];
  
  if (!post) {
    return {};
  }
  
  return createMetadata({
    title: post.title,
    description: post.description,
    keywords: post.tags.join(', '),
  });
}

// Rest of your component
For app/locations/[location]/page.jsx:
jsximport { notFound } from 'next/navigation';
import LocationLanding from '@/components/LocationLanding';
import { generateMetadata as createMetadata } from '@/components/SEOConfig';

// Valid locations list
const validLocations = [
  'nottingham',
  'derby',
  'beeston',
  'stapleford',
  'west-bridgford',
  'wilford',
  'clifton',
  'ruddington'
];

// Function to format location name for display
const formatLocationName = (location) => {
  return location
    .split('-')
    .map(word => word.charAt(0).toUpperCase() + word.slice(1))
    .join(' ');
};

// Generate metadata for each location page
export async function generateMetadata({ params }) {
  const { location } = params;
  
  if (!validLocations.includes(location.toLowerCase())) {
    return {};
  }
  
  const locationName = formatLocationName(location);
  
  return createMetadata({
    title: `Office Space & Coworking in ${locationName}`,
    description: `Find affordable hot desks, private offices and coworking space in ${locationName}. Daily, weekly and monthly rates available.`,
    location: locationName,
  });
}

// Rest of your component
2. Fix the image "sizes" prop warning
Add the sizes prop to all Image components that use fill:
For app/blog/page.jsx:
jsx<Image
  src={post.image || '/blog/default.jpg'}
  alt={post.title}
  fill
  sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw"
  className="object-cover"
/>
For app/blog/[slug]/page.jsx:
jsx<Image
  src={post.image || '/blog/default.jpg'}
  alt={post.title}
  fill
  sizes="100vw"
  className="object-cover"
  priority
/>
For app/locations/page.jsx:
jsx<Image
  src={location.image || '/default-office.jpg'}
  alt={`Office space in ${location.name}`}
  fill
  sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw"
  className="object-cover"
/>